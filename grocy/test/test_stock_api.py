"""
    grocy REST API

    Authentication is done via API keys (header *GROCY-API-KEY* or same named query parameter), which you can manage [here](http://localhost:8111/manageapikeys).<br>Additionally requests from within the frontend are also valid (via session cookie).  # noqa: E501

    The version of the OpenAPI document: 3.0.1
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.stock_api import StockApi  # noqa: E501


class TestStockApi(unittest.TestCase):
    """StockApi unit test stubs"""

    def setUp(self):
        self.api = StockApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_stock_barcodes_external_lookup_barcode_get(self):
        """Test case for stock_barcodes_external_lookup_barcode_get

        Executes an external barcode lookoup via the configured plugin with the given barcode  # noqa: E501
        """
        pass

    def test_stock_bookings_booking_id_get(self):
        """Test case for stock_bookings_booking_id_get

        Returns the given stock booking  # noqa: E501
        """
        pass

    def test_stock_bookings_booking_id_undo_post(self):
        """Test case for stock_bookings_booking_id_undo_post

        Undoes a booking  # noqa: E501
        """
        pass

    def test_stock_entry_entry_id_get(self):
        """Test case for stock_entry_entry_id_get

        Returns details of the given stock  # noqa: E501
        """
        pass

    def test_stock_entry_entry_id_printlabel_get(self):
        """Test case for stock_entry_entry_id_printlabel_get

        Prints the label of the given stock entry  # noqa: E501
        """
        pass

    def test_stock_entry_entry_id_put(self):
        """Test case for stock_entry_entry_id_put

        Edits the stock entry  # noqa: E501
        """
        pass

    def test_stock_get(self):
        """Test case for stock_get

        Returns all products which are currently in stock incl. the next due date per product  # noqa: E501
        """
        pass

    def test_stock_products_product_id_add_post(self):
        """Test case for stock_products_product_id_add_post

        Adds the given amount of the given product to stock  # noqa: E501
        """
        pass

    def test_stock_products_product_id_consume_post(self):
        """Test case for stock_products_product_id_consume_post

        Removes the given amount of the given product from stock  # noqa: E501
        """
        pass

    def test_stock_products_product_id_entries_get(self):
        """Test case for stock_products_product_id_entries_get

        Returns all stock entries of the given product in order of next use (Opened first, then first due first, then first in first out)  # noqa: E501
        """
        pass

    def test_stock_products_product_id_get(self):
        """Test case for stock_products_product_id_get

        Returns details of the given product  # noqa: E501
        """
        pass

    def test_stock_products_product_id_inventory_post(self):
        """Test case for stock_products_product_id_inventory_post

        Inventories the given product (adds/removes based on the given new amount)  # noqa: E501
        """
        pass

    def test_stock_products_product_id_locations_get(self):
        """Test case for stock_products_product_id_locations_get

        Returns all locations where the given product currently has stock  # noqa: E501
        """
        pass

    def test_stock_products_product_id_open_post(self):
        """Test case for stock_products_product_id_open_post

        Marks the given amount of the given product as opened  # noqa: E501
        """
        pass

    def test_stock_products_product_id_price_history_get(self):
        """Test case for stock_products_product_id_price_history_get

        Returns the price history of the given product  # noqa: E501
        """
        pass

    def test_stock_products_product_id_printlabel_get(self):
        """Test case for stock_products_product_id_printlabel_get

        Prints the product label of the given product  # noqa: E501
        """
        pass

    def test_stock_products_product_id_to_keep_merge_product_id_to_remove_post(self):
        """Test case for stock_products_product_id_to_keep_merge_product_id_to_remove_post

        Merges two products into one  # noqa: E501
        """
        pass

    def test_stock_products_product_id_transfer_post(self):
        """Test case for stock_products_product_id_transfer_post

        Transfers the given amount of the given product from one location to another (this is currently not supported for tare weight handling enabled products)  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_add_expired_products_post(self):
        """Test case for stock_shoppinglist_add_expired_products_post

        Adds expired products to the given shopping list  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_add_missing_products_post(self):
        """Test case for stock_shoppinglist_add_missing_products_post

        Adds currently missing products (below defined min. stock amount) to the given shopping list  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_add_overdue_products_post(self):
        """Test case for stock_shoppinglist_add_overdue_products_post

        Adds overdue products to the given shopping list  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_add_product_post(self):
        """Test case for stock_shoppinglist_add_product_post

        Adds the given amount of the given product to the given shopping list  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_clear_post(self):
        """Test case for stock_shoppinglist_clear_post

        Removes all items from the given shopping list  # noqa: E501
        """
        pass

    def test_stock_shoppinglist_remove_product_post(self):
        """Test case for stock_shoppinglist_remove_product_post

        Removes the given amount of the given product from the given shopping list, if it is on it  # noqa: E501
        """
        pass

    def test_stock_transactions_transaction_id_get(self):
        """Test case for stock_transactions_transaction_id_get

        Returns all stock bookings of the given transaction id  # noqa: E501
        """
        pass

    def test_stock_transactions_transaction_id_undo_post(self):
        """Test case for stock_transactions_transaction_id_undo_post

        Undoes a transaction  # noqa: E501
        """
        pass

    def test_stock_volatile_get(self):
        """Test case for stock_volatile_get

        Returns all products which are due soon, overdue, expired or currently missing  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
